training_period = 5,
rolling_window = 10
)
chart.Weights(opt_rebalance, main="Rebalanced Weights Over Time")
extractWeights(opt_rebalance)
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1:2])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
rp <- random_portfolios(portf,100,"sample")
opt_rebalance <- optimize.portfolio.rebalancing(
R = return_data,
portf,
optimize_method = "ROI",
rp = rp,
rebalance_on = "months",
training_period = 5,
rolling_window = 10
)
chart.Weights(opt_rebalance, main="Rebalanced Weights Over Time")
extractWeights(opt_rebalance)
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1:2])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "StdDev")
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
rp <- random_portfolios(portf,100,"sample")
opt_rebalance <- optimize.portfolio.rebalancing(
R = return_data,
portf,
optimize_method = "ROI",
rp = rp,
rebalance_on = "months",
training_period = 5,
rolling_window = 10
)
chart.Weights(opt_rebalance, main="Rebalanced Weights Over Time")
extractWeights(opt_rebalance)
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1:2])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "StdDev")
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
rp <- random_portfolios(portf,100,"sample")
opt_rebalance <- optimize.portfolio.rebalancing(
R = return_data,
portf,
optimize_method = "ROI",
rp = rp,
rebalance_on = "months",
training_period = 5,
rolling_window = 10
)
chart.Weights(opt_rebalance, main="Rebalanced Weights Over Time")
extractWeights(opt_rebalance)
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1:2])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
# portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "StdDev")
portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "CVaR")
rp <- random_portfolios(portf,100,"sample")
opt_rebalance <- optimize.portfolio.rebalancing(
R = return_data,
portf,
optimize_method = "ROI",
rp = rp,
rebalance_on = "months",
training_period = 5,
rolling_window = 10
)
chart.Weights(opt_rebalance, main="Rebalanced Weights Over Time")
extractWeights(opt_rebalance)
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1:2])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
# portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "StdDev")
portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "CVaR")
rp <- random_portfolios(portf,100,"sample")
opt_rebalance <- optimize.portfolio.rebalancing(
R = return_data,
portf,
optimize_method = "ROI",
rp = rp,
rebalance_on = "months",
training_period = 10,
rolling_window = 10
)
chart.Weights(opt_rebalance, main="Rebalanced Weights Over Time")
extractWeights(opt_rebalance)
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1:2])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
# portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "StdDev")
portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "CVaR")
rp <- random_portfolios(portf,100,"sample")
opt_rebalance <- optimize.portfolio.rebalancing(
R = return_data,
portf,
optimize_method = "DEoptim",
rp = rp,
rebalance_on = "months",
training_period = 10,
rolling_window = 10
)
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
# portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "StdDev")
portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "CVaR")
rp <- random_portfolios(portf,100,"sample")
opt_rebalance <- optimize.portfolio.rebalancing(
R = return_data,
portf,
optimize_method = "ROI",
rp = rp,
rebalance_on = "months",
training_period = 10,
rolling_window = 10
)
chart.Weights(opt_rebalance, main="Rebalanced Weights Over Time")
extractWeights(opt_rebalance)
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1:2])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
# portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "StdDev")
portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "CVaR")
rp <- random_portfolios(portf,100,"sample")
opt_rebalance <- optimize.portfolio.rebalancing(
R = return_data,
portf,
optimize_method = "ROI",
rp = rp,
rebalance_on = "days",
training_period = 10,
rolling_window = 10
)
chart.Weights(opt_rebalance, main="Rebalanced Weights Over Time")
extractWeights(opt_rebalance)
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1:2])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
# portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "StdDev")
portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "CVaR")
rp <- random_portfolios(portf,100,"sample")
opt_rebalance <- optimize.portfolio.rebalancing(
R = return_data,
portf,
optimize_method = "ROI",
rp = rp,
rebalance_on = "days",
training_period = 100,
rolling_window = 100
)
chart.Weights(opt_rebalance, main="Rebalanced Weights Over Time")
extractWeights(opt_rebalance)
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
# portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "StdDev")
portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "CVaR")
rp <- random_portfolios(portf,100,"sample")
opt_rebalance <- optimize.portfolio.rebalancing(
R = return_data,
portf,
optimize_method = "ROI",
rp = rp,
rebalance_on = "months",
training_period = 12,
rolling_window = 12
)
chart.Weights(opt_rebalance, main="Rebalanced Weights Over Time")
extractWeights(opt_rebalance)
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
# portf<- construct_portfolio(return_data = return_data,short = F,risk_measure = "CVaR")
# portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "StdDev")
portf<- construct_portfolio(return_data = return_data,short = T,risk_measure = "CVaR")
rp <- random_portfolios(portf,1000,"sample")
opt_rebalance <- optimize.portfolio.rebalancing(
R = return_data,
portf,
optimize_method = "ROI",
rp = rp,
rebalance_on = "months",
training_period = 5,
rolling_window = 10
)
chart.Weights(opt_rebalance, main="Rebalanced Weights Over Time")
extractWeights(opt_rebalance)
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1,2])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
# weights <- c(0.6,0.1,0.1,-0.1,-0.1,-0.1,-0.5)
portfolio_returns <- Return.portfolio(return_data,weights = extractWeights(opt_rebalance))
# portfolio_returns <- Return.portfolio(return_data,weights = weights)
rets_df <- cbind(portfolio_returns, return_data[,1:2])
charts.PerformanceSummary(rets_df, main="P/L Over Time")
plot_return_distributions(portfolio_returns,column = 1,to_local = F)
chart.Correlation(na.omit(cbind(portfolio_returns,return_data)))
View(rets_df)
sapply(1:3,Calculate_VaR,return_data=rets_df,method = "Gaussian")
View(rets_df)
chart.RelativePerformance(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2] )
chart.Drawdown(na.omit(rets_df)[,1:2])
chart.Drawdown(na.omit(rets_df)[,1:2],legend.loc = "bottomleft")
chart.RollingCorrelation(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
# chart.RollingCorrelation(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
chart.RollingRegression(Ra = return_data[,i],Rb = return_data[,1]),attribute = "Beta"))
# chart.RollingCorrelation(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
chart.RollingRegression(Ra = return_data[,i],Rb = return_data[,1],attribute = "Beta")
# chart.RollingCorrelation(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
chart.RollingRegression(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2],attribute = "Beta")
# chart.RollingCorrelation(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
chart.RollingRegression(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2],attribute = "Beta",width = 230)
chart.CaptureRatios(Ra=return_data[,i],Rb = return_data[,1]
chart.CaptureRatios(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
CAPM.alpha(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
CAPM.beta(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
View(rets_df)
CAPM.dynamic(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2],Z=na.omit(rets_df)[,3])
print("alpha")
CAPM.alpha(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("beta")
CAPM.beta(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Risk Premium")
CAPM.RiskPremium(Ra = na.omit(rets_df)[,1])
print("alpha")
CAPM.alpha(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("beta")
CAPM.beta(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Risk Premium")
CAPM.RiskPremium(Ra = na.omit(rets_df)[,1])[1]
print("alpha")
CAPM.alpha(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("beta")
CAPM.beta(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Risk Premium")
CAPM.RiskPremium(Ra = na.omit(rets_df)[,1])[1]
CAPM.beta.bear(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("alpha")
CAPM.alpha(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("beta")
CAPM.beta(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Risk Premium")
CAPM.RiskPremium(Ra = na.omit(rets_df)[,1])[1]
CAPM.beta.bear(na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("alpha")
CAPM.alpha(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("beta")
CAPM.beta(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Risk Premium")
CAPM.RiskPremium(Ra = na.omit(rets_df)[,1])[1]
print("Bear Beta")
CAPM.beta.bear(na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Bull Beta")
CAPM.beta.bull(na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Jesen's Alpha")
CAPM.jensenAlpha(na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("alpha")
CAPM.alpha(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("beta")
CAPM.beta(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Risk Premium")
CAPM.RiskPremium(Ra = na.omit(rets_df)[,1])[1]
print("Bear Beta")
CAPM.beta.bear(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Bull Beta")
CAPM.beta.bull(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Jesen's Alpha")
CAPM.jensenAlpha(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Annualized Excess")
Return.annualized.excess(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("alpha")
CAPM.alpha(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("beta")
CAPM.beta(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Risk Premium")
CAPM.RiskPremium(Ra = na.omit(rets_df)[,1])[1]
print("Bear Beta")
CAPM.beta.bear(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Bull Beta")
CAPM.beta.bull(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Jesen's Alpha")
CAPM.jensenAlpha(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Annualized Excess")
Return.annualized.excess(portfolio_returns,Rb = na.omit(rets_df)[,2])
print("alpha")
CAPM.alpha(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("beta")
CAPM.beta(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Risk Premium")
CAPM.RiskPremium(Ra = na.omit(rets_df)[,1])[1]
print("Bear Beta")
CAPM.beta.bear(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Bull Beta")
CAPM.beta.bull(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Jesen's Alpha")
CAPM.jensenAlpha(Ra = na.omit(rets_df)[,1],Rb =na.omit(rets_df)[,2])
print("Annualized Excess")
Return.annualized.excess(portfolio_returns,Rb = na.omit(rets_df)[,2])[1]
chart.EF.Weights(portfolio_returns)
chart.EF.Weights(rets_df)
chart.EF.Weights(portfolio_returns)
chart.BarVaR(portfolio_returns,methods = "GaussianVaR")
print("Portfolio")
CVaR(portfolio_returns,method = "historical")
print("SPY")
CVaR(R = return_data[,1],method = "historical")
print("Portfolio")
CVaR(portfolio_returns,method = "historical")[1]
print("SPY")
CVaR(R = return_data[,1],method = "historical")[1]
print("Portfolio CVaR")
CVaR(portfolio_returns,method = "historical")[1]
print("SPY  CVaR")
CVaR(R = return_data[,1],method = "historical")[1]
print("Portfolio CVaR")
CVaR(portfolio_returns,method = "gaussian")[1]
print("SPY  CVaR")
CVaR(R = return_data[,1],method = "gaussian")[1]
print("Portfolio CVaR")
CVaR(portfolio_returns,method = "modified")[1]
print("SPY  CVaR")
CVaR(R = return_data[,1],method = "modified")[1]
?as.data.frame.Date
data.frame(date=index(portfolio_returns), coredata(portfolio_returns))
write.csv(data.frame(date=index(portfolio_returns), coredata(portfolio_returns)),file = "data/Portfolio_Returns.csv")
write.csv(data.frame(date=index(portfolio_returns), coredata(portfolio_returns))
,file = "data/Portfolio_Returns.csv")
write.csv(data.frame(date=index(extractWeights(opt_rebalance)), coredata(extractWeights(opt_rebalance)))
,file = "data/Portfolio_Returns.csv")
write.csv(data.frame(date=index(portfolio_returns), coredata(portfolio_returns))
,file = "data/PortfolioReturns.csv")
write.csv(data.frame(date=index(extractWeights(opt_rebalance)), coredata(extractWeights(opt_rebalance)))
,file = "data/PortfolioWeights.csv")
weights <- read.csv.zoo("data/PortfolioWeights.csv")
head(weights)
weights <- read.csv.zoo("data/PortfolioWeights.csv")
library(xts)
source("helper.R")
weights <- read.csv.zoo("data/PortfolioWeights.csv")
source("helper.R")
weights <- read.csv("data/PortfolioWeights.csv")
weights
source("helper.R")
weights <- read.csv("data/PortfolioWeights.csv")
weights[,1]
source("helper.R")
weights <- read.csv("data/PortfolioWeights.csv")
weights[,2]
source("helper.R")
weights <- read.csv("data/PortfolioWeights.csv")
weights <- weights[,1:]
source("helper.R")
weights <- read.csv("data/PortfolioWeights.csv")
weights <- weights[,2:9]
source("helper.R")
weights <- read.csv("data/PortfolioWeights.csv")
weights <- weights[,2:9]
weights
source("helper.R")
weights <- read.csv("data/PortfolioWeights.csv")
weights <- weights[,2:9]
weights <- xts(weights[,-1],order.by = weights[,1])
source("helper.R")
library(tidyquant)
source("helper.R")
library(tidyquant)
install.packages(tidyquant)
install.packages("tidyquant")
install.packages("tidyquant")
install.packages("tidyquant")
library(timetk)
weights <- read.csv("data/PortfolioWeights.csv")
weights <- weights[,2:9]
source("helper.R")
weights <- read.csv("data/PortfolioWeights.csv")
weights <- weights[,2:9]
weights <- xts::xts(weights[,-1], order.by = weights$date)
source("helper.R")
weights <- read.csv("data/PortfolioWeights.csv")
weights <- weights[,2:9]
weights$date = as.Date(weights$date)
weights <- xts::xts(weights[,-1], order.by = weights$date)
head(weights)
length(weights)
weights <- read.csv("data/PortfolioWeights.csv")
length(colnames(weights))
source("helper.R")
source("helper.R")
weights <- load_csv_xts("data/PortfolioWeights.csv")
# weights <- read.csv("data/PortfolioWeights.csv")
# weights <- weights[,2:9]
# weights$date = as.Date(weights$date)
# weights <- xts::xts(weights[,-1], order.by = weights$date)
head(weights)
source("helper.R")
weights <- load_csv_xts("data/PortfolioWeights.csv")
portfolioReturns <- load_csv_xts("data/PortfolioReturns.csv")
source("helper.R")
weights <- load_csv_xts("data/PortfolioWeights.csv")
portfolioReturns <- load_csv_xts("data/PortfolioReturns.csv")
# weights <- read.csv("data/PortfolioWeights.csv")
# weights <- weights[,2:9]
# weights$date = as.Date(weights$date)
# weights <- xts::xts(weights[,-1], order.by = weights$date)
head(portfolioReturns)
source("helper.R")
weights <- load_csv_xts("data/PortfolioWeights.csv")
portfolioReturns <- load_csv_xts("data/PortfolioReturns.csv")
# weights <- read.csv("data/PortfolioWeights.csv")
# weights <- weights[,2:9]
# weights$date = as.Date(weights$date)
# weights <- xts::xts(weights[,-1], order.by = weights$date)
head(portfolioReturns)
head(weights)
source("helper.R")
weights <- load_csv_xts("data/PortfolioWeights.csv")
portfolioReturns <- load_csv_xts("data/PortfolioReturns.csv")
colnames(portfolioReturns) <- "Portfolio"
# weights <- read.csv("data/PortfolioWeights.csv")
# weights <- weights[,2:9]
# weights$date = as.Date(weights$date)
# weights <- xts::xts(weights[,-1], order.by = weights$date)
head(portfolioReturns)
# head(weights)
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
install.packages("MASS")
install.packages("quadprog")
tickers <- c("SPY","TLT","HYG","LQD","GLD","BNO","VIXY")
start_date <- "2011-03-11"
num_of_tickers <- length(tickers)
result <- collect_data(tickers,start_date)
source("helper.r")
tickers <- c("SPY","TLT","HYG","LQD","GLD","BNO","VIXY")
start_date <- "2011-03-11"
num_of_tickers <- length(tickers)
result <- collect_data(tickers,start_date)
source("helper.r")
tickers <- c("SPY","TLT","HYG","LQD","GLD","BNO","VIXY")
start_date <- "2011-03-11"
num_of_tickers <- length(tickers)
result <- collect_data(tickers,start_date)
source("helper.r")
tickers <- c("SPY","TLT","HYG","LQD","GLD","BNO","VIXY")
start_date <- "2011-03-11"
num_of_tickers <- length(tickers)
result <- collect_data(tickers,start_date)
source("helper.r")
tickers <- c("SPY","TLT","HYG","LQD","GLD","BNO","VIXY")
start_date <- "2011-03-11"
num_of_tickers <- length(tickers)
result <- collect_data(tickers,start_date)
result <- collect_data(tickers,start_date)
source("helper.r")
tickers <- c("SPY","TLT","HYG","LQD","GLD","BNO","VIXY")
close_data <- load_csv_xts("data/adj_closes.csv")
source("helper.r")
tickers <- c("SPY","TLT","HYG","LQD","GLD","BNO","VIXY")
num_of_tickers <- length(tickers)
result <- collect_data(tickers,start_date)
source("helper.r")
tickers <- c("SPY","TLT","HYG","LQD","GLD","BNO","VIXY")
num_of_tickers <- length(tickers)
start_date <- "2011-03-11"
result <- collect_data(tickers,start_date)
source("helper.r")
tickers <- c("SPY","TLT","HYG","LQD","GLD","BNO","VIXY")
num_of_tickers <- length(tickers)
close_data <- load_csv_xts("data/adj_closes.csv")
source("helper.r")
tickers <- c("SPY","TLT","HYG","LQD","GLD","BNO","VIXY")
num_of_tickers <- length(tickers)
close_data <- read.csv("data/adj_closes.csv")
View(close_data)
